
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: traitdefinitions.core.oam.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.definitionRef.name
    name: DEFINITION-NAME
    type: string
  group: core.oam.dev
  names:
    categories:
    - crossplane
    - oam
    kind: TraitDefinition
    listKind: TraitDefinitionList
    plural: traitdefinitions
    singular: traitdefinition
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A TraitDefinitionSpec defines the desired state of a TraitDefinition.
          properties:
            appliesToWorkloads:
              description: AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.
              items:
                type: string
              type: array
            conflictsWith:
              description: 'ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: "service" # Trait definition name "services.k8s.io" # API resource/crd name "*.networking.k8s.io" # API group "labelSelector:foo=bar" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse'
              items:
                type: string
              type: array
            definitionRef:
              description: Reference to the CustomResourceDefinition that defines this trait kind.
              properties:
                name:
                  description: Name of the referenced CustomResourceDefinition.
                  type: string
                version:
                  description: Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified
                  type: string
              required:
              - name
              type: object
            extension:
              description: Extension is used for extension needs by OAM platform builders
              type: object
              
            revisionEnabled:
              description: Revision indicates whether a trait is aware of component revision
              type: boolean
            status:
              description: Status defines the custom health policy and status message for trait
              properties:
                customStatus:
                  description: CustomStatus defines the custom status message that could display to user
                  type: string
                healthPolicy:
                  description: HealthPolicy defines the health check policy for the abstraction
                  type: string
              type: object
            template:
              description: Template defines the abstraction template data of the workload, it will replace the old template in extension field. the data format depends on templateType, by default it's CUE
              type: string
            templateType:
              description: TemplateType defines the data format of the template, by default it's CUE format Terraform HCL, Helm Chart will also be candidates in the near future.
              type: string
            workloadRefPath:
              description: WorkloadRefPath indicates where/if a trait accepts a workloadRef object
              type: string
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
